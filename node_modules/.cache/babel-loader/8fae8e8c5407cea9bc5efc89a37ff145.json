{"ast":null,"code":"var _jsxFileName = \"/Users/mac/React/whatsapp/src/Whatsapp.js\";\nimport React, { Component } from 'react';\nimport './Whatsapp.css';\nimport TopBar from './components/topbar';\nimport ChatContainer from './components/chatcontainer'; // Structure of the Whatsapp Component\n//     Whatsapp\n//        ↳TopBar\n//            ↳BackIcon\n//            ↳Profile Picture\n//            ↳Display Name\n//            ↳More Setting Icon\n//        ↳ChatContainer\n//            ↳TextContainer\n//                ↳Messages\n//            ↳Message Compose\n//                ↳Smiley Icon\n//                ↳Type a message Field\n//                ↳Camera Icon\n//                ↳Send Button\n\nclass Whatsapp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: []\n    };\n  }\n\n  componentDidMount() {\n    for (let i = 0; i < this.props.messages.length; i++) {\n      setTimeout(() => {\n        var messages = this.state.messages.concat(this.props.messages[i]);\n        this.setState({\n          messages\n        });\n      }, i * 1500);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      client: this.props.client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(ChatContainer, {\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n} // // This component renders the message depending upon the type of message. \n// function Message(props) {\n//     // For normal text message\n//     if (props.message.type === \"text\") {\n//         return (\n//             <div className=\"message clearfix\">\n//                 <div className={props.message.source}>\n//                     {props.message.message.split('\\n').map((item, i) => { return <p key={i}>{item}</p> })}\n//                     <span className=\"time\">3:30 PM</span>\n//                     <span className=\"tick\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"15\" id=\"msg-dblcheck-ack\" x=\"2063\" y=\"2076\"><path d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.88a.32.32 0 0 1-.484.032l-.358-.325a.32.32 0 0 0-.484.032l-.378.48a.418.418 0 0 0 .036.54l1.32 1.267a.32.32 0 0 0 .484-.034l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.88a.32.32 0 0 1-.484.032L1.892 7.77a.366.366 0 0 0-.516.005l-.423.433a.364.364 0 0 0 .006.514l3.255 3.185a.32.32 0 0 0 .484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\" fill=\"#4fc3f7\" /></svg></span>\n//                 </div>\n//             </div>\n//         )\n//     }\n//     // For PDF Messages\n//     if (props.message.type === \"pdf\") {\n//         return (\n//             <div className={props.message.source}>\n//                 <div className=\"pdf\">\n//                     <img className=\"pdf-icon\" src=\"https://image.flaticon.com/icons/svg/179/179483.svg\" alt=\"PDF-ICON\"></img>\n//                     <div className=\"pdf-name\">{props.message.message}</div>\n//                 </div>\n//                 <span className=\"time\">3:30 PM</span>\n//                 <span className=\"tick\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"15\" id=\"msg-dblcheck-ack\" x=\"2063\" y=\"2076\"><path d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.88a.32.32 0 0 1-.484.032l-.358-.325a.32.32 0 0 0-.484.032l-.378.48a.418.418 0 0 0 .036.54l1.32 1.267a.32.32 0 0 0 .484-.034l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.88a.32.32 0 0 1-.484.032L1.892 7.77a.366.366 0 0 0-.516.005l-.423.433a.364.364 0 0 0 .006.514l3.255 3.185a.32.32 0 0 0 .484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\" fill=\"#4fc3f7\" /></svg></span>\n//             </div>\n//         )\n//     }\n//     // Fail Safe \n//     return (\n//         <div className=\"message clearfix\">\n//             <div className={props.message.source}>\n//                 <div>{props.message.message}</div>\n//                 <span className=\"time\">3:30 PM</span>\n//                 <span className=\"tick\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"15\" id=\"msg-dblcheck-ack\" x=\"2063\" y=\"2076\"><path d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.88a.32.32 0 0 1-.484.032l-.358-.325a.32.32 0 0 0-.484.032l-.378.48a.418.418 0 0 0 .036.54l1.32 1.267a.32.32 0 0 0 .484-.034l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.88a.32.32 0 0 1-.484.032L1.892 7.77a.366.366 0 0 0-.516.005l-.423.433a.364.364 0 0 0 .006.514l3.255 3.185a.32.32 0 0 0 .484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\" fill=\"#4fc3f7\" /></svg></span>\n//             </div>\n//         </div>\n//     )\n// }\n// // The bottom component, which includes Smiley Icon, \"Type a message\" field and Send button\n// function MessageCompose(props) {\n//     return (\n//         <div className=\"message-compose\">\n//             <div className=\"input-field\">\n//                 <div className=\"smiley\">\n//                     <i className=\"zmdi zmdi-mood\"></i>\n//                 </div>\n//                 <div className=\"message-type\">\n//                     <span>Type a message</span>\n//                 </div>\n//                 <div className=\"camera-icon\">\n//                     <i className=\"zmdi zmdi-camera\"></i>\n//                 </div>\n//             </div>\n//             <div className=\"send-button\" onClick={props.onSend}>\n//                 <i className=\"zmdi zmdi-mail-send\"></i>\n//             </div>\n//         </div>\n//     );\n// }\n// class ChatContainer extends Component {\n//     scrollToBottom = () => {\n//         this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n//     }\n//     componentDidMount() {\n//         this.scrollToBottom();\n//     }\n//     componentDidUpdate() {\n//         this.scrollToBottom();\n//     }\n//     render() {\n//         return (\n//             <div className=\"chat-container\">\n//                 <div className=\"text-container\">\n//                     {\n//                         this.props.messages.map((m, i) => {\n//                             return <Message key={i} message={m} />\n//                         })\n//                     }\n//                     <div style={{ float: \"left\", clear: \"both\" }}\n//                         ref={(el) => { this.messagesEnd = el; }}></div>\n//                 </div>\n//                 <MessageCompose />\n//             </div>\n//         );\n//     }\n// }\n\n\nexport default Whatsapp;","map":{"version":3,"sources":["/Users/mac/React/whatsapp/src/Whatsapp.js"],"names":["React","Component","TopBar","ChatContainer","Whatsapp","constructor","props","state","messages","componentDidMount","i","length","setTimeout","concat","setState","render","client"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,KAAL,CAAWE,QAAX,CAAoBG,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACjDE,MAAAA,UAAU,CAAC,MAAM;AACb,YAAIJ,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBK,MAApB,CAA2B,KAAKP,KAAL,CAAWE,QAAX,CAAoBE,CAApB,CAA3B,CAAf;AACA,aAAKI,QAAL,CAAc;AAAEN,UAAAA;AAAF,SAAd;AAEH,OAJS,EAIPE,CAAC,GAAG,IAJG,CAAV;AAKH;AAEJ;;AAGDK,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH;;AA1B4B,C,CAkCjC;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAEA;AAEA;;;AAGA,eAAeJ,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Whatsapp.css';\nimport TopBar from './components/topbar';\nimport ChatContainer from './components/chatcontainer';\n\n// Structure of the Whatsapp Component\n\n//     Whatsapp\n//        ↳TopBar\n//            ↳BackIcon\n//            ↳Profile Picture\n//            ↳Display Name\n//            ↳More Setting Icon\n//        ↳ChatContainer\n//            ↳TextContainer\n//                ↳Messages\n//            ↳Message Compose\n//                ↳Smiley Icon\n//                ↳Type a message Field\n//                ↳Camera Icon\n//                ↳Send Button\n\nclass Whatsapp extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { messages: [] }\n    }\n\n    componentDidMount() {\n        for (let i = 0; i < this.props.messages.length; i++) {\n            setTimeout(() => {\n                var messages = this.state.messages.concat(this.props.messages[i]);\n                this.setState({ messages });\n\n            }, i * 1500);\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <TopBar client={this.props.client} />\n                <ChatContainer messages={this.state.messages} />\n            </div>\n        );\n\n    }\n}\n\n\n\n\n\n\n// // This component renders the message depending upon the type of message. \n\n// function Message(props) {\n\n//     // For normal text message\n\n//     if (props.message.type === \"text\") {\n//         return (\n//             <div className=\"message clearfix\">\n//                 <div className={props.message.source}>\n//                     {props.message.message.split('\\n').map((item, i) => { return <p key={i}>{item}</p> })}\n//                     <span className=\"time\">3:30 PM</span>\n//                     <span className=\"tick\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"15\" id=\"msg-dblcheck-ack\" x=\"2063\" y=\"2076\"><path d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.88a.32.32 0 0 1-.484.032l-.358-.325a.32.32 0 0 0-.484.032l-.378.48a.418.418 0 0 0 .036.54l1.32 1.267a.32.32 0 0 0 .484-.034l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.88a.32.32 0 0 1-.484.032L1.892 7.77a.366.366 0 0 0-.516.005l-.423.433a.364.364 0 0 0 .006.514l3.255 3.185a.32.32 0 0 0 .484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\" fill=\"#4fc3f7\" /></svg></span>\n//                 </div>\n\n//             </div>\n//         )\n\n//     }\n\n//     // For PDF Messages\n\n//     if (props.message.type === \"pdf\") {\n//         return (\n//             <div className={props.message.source}>\n//                 <div className=\"pdf\">\n//                     <img className=\"pdf-icon\" src=\"https://image.flaticon.com/icons/svg/179/179483.svg\" alt=\"PDF-ICON\"></img>\n//                     <div className=\"pdf-name\">{props.message.message}</div>\n//                 </div>\n//                 <span className=\"time\">3:30 PM</span>\n//                 <span className=\"tick\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"15\" id=\"msg-dblcheck-ack\" x=\"2063\" y=\"2076\"><path d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.88a.32.32 0 0 1-.484.032l-.358-.325a.32.32 0 0 0-.484.032l-.378.48a.418.418 0 0 0 .036.54l1.32 1.267a.32.32 0 0 0 .484-.034l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.88a.32.32 0 0 1-.484.032L1.892 7.77a.366.366 0 0 0-.516.005l-.423.433a.364.364 0 0 0 .006.514l3.255 3.185a.32.32 0 0 0 .484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\" fill=\"#4fc3f7\" /></svg></span>\n//             </div>\n//         )\n\n//     }\n\n//     // Fail Safe \n//     return (\n//         <div className=\"message clearfix\">\n//             <div className={props.message.source}>\n//                 <div>{props.message.message}</div>\n//                 <span className=\"time\">3:30 PM</span>\n//                 <span className=\"tick\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"15\" id=\"msg-dblcheck-ack\" x=\"2063\" y=\"2076\"><path d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.88a.32.32 0 0 1-.484.032l-.358-.325a.32.32 0 0 0-.484.032l-.378.48a.418.418 0 0 0 .036.54l1.32 1.267a.32.32 0 0 0 .484-.034l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.88a.32.32 0 0 1-.484.032L1.892 7.77a.366.366 0 0 0-.516.005l-.423.433a.364.364 0 0 0 .006.514l3.255 3.185a.32.32 0 0 0 .484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\" fill=\"#4fc3f7\" /></svg></span>\n//             </div>\n\n//         </div>\n//     )\n\n// }\n\n// // The bottom component, which includes Smiley Icon, \"Type a message\" field and Send button\n\n\n// function MessageCompose(props) {\n//     return (\n//         <div className=\"message-compose\">\n//             <div className=\"input-field\">\n//                 <div className=\"smiley\">\n//                     <i className=\"zmdi zmdi-mood\"></i>\n//                 </div>\n\n//                 <div className=\"message-type\">\n//                     <span>Type a message</span>\n//                 </div>\n\n//                 <div className=\"camera-icon\">\n//                     <i className=\"zmdi zmdi-camera\"></i>\n//                 </div>\n//             </div>\n\n//             <div className=\"send-button\" onClick={props.onSend}>\n//                 <i className=\"zmdi zmdi-mail-send\"></i>\n//             </div>\n\n//         </div>\n//     );\n// }\n\n\n// class ChatContainer extends Component {\n\n//     scrollToBottom = () => {\n//         this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n//     }\n\n//     componentDidMount() {\n//         this.scrollToBottom();\n//     }\n\n//     componentDidUpdate() {\n//         this.scrollToBottom();\n//     }\n\n\n//     render() {\n\n//         return (\n//             <div className=\"chat-container\">\n//                 <div className=\"text-container\">\n//                     {\n//                         this.props.messages.map((m, i) => {\n//                             return <Message key={i} message={m} />\n\n//                         })\n//                     }\n//                     <div style={{ float: \"left\", clear: \"both\" }}\n//                         ref={(el) => { this.messagesEnd = el; }}></div>\n//                 </div>\n\n\n//                 <MessageCompose />\n\n\n//             </div>\n//         );\n\n//     }\n\n// }\n\n\nexport default Whatsapp;"]},"metadata":{},"sourceType":"module"}