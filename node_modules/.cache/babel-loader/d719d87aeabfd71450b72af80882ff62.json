{"ast":null,"code":"var _jsxFileName = \"/Users/mac/React/whatsapp/src/components/chatcontainer.js\";\nimport React, { Component } from 'react';\nimport Message from './message'; // function Tick(props) {\n//     return (\n//         <div className=\"tick-container\"><span className=\"tick\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"15\" id=\"msg-dblcheck-ack\" x=\"2063\" y=\"2076\"><path d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.88a.32.32 0 0 1-.484.032l-.358-.325a.32.32 0 0 0-.484.032l-.378.48a.418.418 0 0 0 .036.54l1.32 1.267a.32.32 0 0 0 .484-.034l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.88a.32.32 0 0 1-.484.032L1.892 7.77a.366.366 0 0 0-.516.005l-.423.433a.364.364 0 0 0 .006.514l3.255 3.185a.32.32 0 0 0 .484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\" fill=\"#4fc3f7\" /></svg></span></div>\n//     )\n// }\n// This component renders the message depending upon the type of message. \n// function Message(props) {\n//     var d = new Date();\n//     var hr = d.getHours();\n//     var min = d.getMinutes();\n//     if (min < 10) {\n//         min = \"0\" + min;\n//     }\n//     var ampm = \"am\";\n//     if (hr > 12) {\n//         hr -= 12;\n//         ampm = \"pm\";\n//     }\n//     var time = hr + \":\" + min + \" \" + ampm;\n//     // For normal text message\n//     if (props.message.type === \"text\") {\n//         return (\n//             <div className=\"message clearfix\">\n//                 <div className={props.message.source}>\n//                     {props.message.message.split('\\n').map((item, i) => { return <div className=\"spacer\" key={i}>{item}</div> })}\n//                     <Tick />\n//                     <span className=\"time\">{time}</span>\n//                 </div>\n//             </div>\n//         )\n//     }\n//     // For PDF Messages\n//     if (props.message.type === \"pdf\") {\n//         return (\n//             <div className={props.message.source}>\n//                 <div className=\"pdf\">\n//                     <img className=\"pdf-icon\" src=\"https://image.flaticon.com/icons/svg/179/179483.svg\" alt=\"PDF-ICON\"></img>\n//                     <div className=\"pdf-name\">{props.message.message}</div>\n//                 </div>\n//                 <Tick />\n//                 <span className=\"time\">{time}</span>\n//             </div>\n//         )\n//     }\n//     // Fail Safe \n//     return (\n//         <div className=\"message clearfix\">\n//             <div className={props.message.source}>\n//                 <div>{props.message.message}</div>\n//                 <Tick />\n//                 <span className=\"time\">{time}</span>\n//             </div>\n//         </div>\n//     )\n// }\n// The bottom component, which includes Smiley Icon, \"Type a message\" field and Send button\n\nfunction MessageCompose(props) {\n  return React.createElement(\"div\", {\n    className: \"message-compose\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"smiley\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"zmdi zmdi-mood\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"message-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Type a message\")), React.createElement(\"div\", {\n    className: \"camera-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"zmdi zmdi-camera\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"send-button\",\n    onClick: props.onSend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"zmdi zmdi-mail-send\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })));\n}\n\nclass ChatContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.scrollToBottom = () => {\n      this.messagesEnd.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chat-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.props.messages.map((m, i) => {\n      return React.createElement(Message, {\n        key: i,\n        message: m,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      });\n    }), React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        clear: \"both\"\n      },\n      ref: el => {\n        this.messagesEnd = el;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(MessageCompose, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChatContainer;","map":{"version":3,"sources":["/Users/mac/React/whatsapp/src/components/chatcontainer.js"],"names":["React","Component","Message","MessageCompose","props","onSend","ChatContainer","scrollToBottom","messagesEnd","scrollIntoView","behavior","componentDidMount","componentDidUpdate","render","messages","map","m","i","float","clear","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CALJ,EASI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,CADJ,EAeI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,OAAO,EAAEA,KAAK,CAACC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfJ,CADJ;AAsBH;;AAID,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAElCM,cAFkC,GAEjB,MAAM;AACnB,WAAKC,WAAL,CAAiBC,cAAjB,CAAgC;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAhC;AACH,KAJiC;AAAA;;AAMlCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,cAAL;AACH;;AAEDK,EAAAA,kBAAkB,GAAG;AACjB,SAAKL,cAAL;AACH;;AAGDM,EAAAA,MAAM,GAAG;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKT,KAAL,CAAWU,QAAX,CAAoBC,GAApB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC9B,aAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,CAAd;AAAiB,QAAA,OAAO,EAAED,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEH,KAHD,CAFR,EAOI;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAAZ;AACI,MAAA,GAAG,EAAGC,EAAD,IAAQ;AAAE,aAAKZ,WAAL,GAAmBY,EAAnB;AAAwB,OAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,EAaI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ;AAoBH;;AArCiC;;AAyCtC,eAAed,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport Message from './message';\n\n// function Tick(props) {\n//     return (\n//         <div className=\"tick-container\"><span className=\"tick\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"15\" id=\"msg-dblcheck-ack\" x=\"2063\" y=\"2076\"><path d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.88a.32.32 0 0 1-.484.032l-.358-.325a.32.32 0 0 0-.484.032l-.378.48a.418.418 0 0 0 .036.54l1.32 1.267a.32.32 0 0 0 .484-.034l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.88a.32.32 0 0 1-.484.032L1.892 7.77a.366.366 0 0 0-.516.005l-.423.433a.364.364 0 0 0 .006.514l3.255 3.185a.32.32 0 0 0 .484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\" fill=\"#4fc3f7\" /></svg></span></div>\n//     )\n// }\n\n// This component renders the message depending upon the type of message. \n\n// function Message(props) {\n\n//     var d = new Date();\n//     var hr = d.getHours();\n//     var min = d.getMinutes();\n//     if (min < 10) {\n//         min = \"0\" + min;\n//     }\n\n//     var ampm = \"am\";\n\n//     if (hr > 12) {\n//         hr -= 12;\n//         ampm = \"pm\";\n//     }\n//     var time = hr + \":\" + min + \" \" + ampm;\n\n//     // For normal text message\n\n//     if (props.message.type === \"text\") {\n//         return (\n//             <div className=\"message clearfix\">\n//                 <div className={props.message.source}>\n//                     {props.message.message.split('\\n').map((item, i) => { return <div className=\"spacer\" key={i}>{item}</div> })}\n//                     <Tick />\n//                     <span className=\"time\">{time}</span>\n//                 </div>\n\n//             </div>\n//         )\n\n//     }\n\n//     // For PDF Messages\n\n//     if (props.message.type === \"pdf\") {\n//         return (\n//             <div className={props.message.source}>\n//                 <div className=\"pdf\">\n//                     <img className=\"pdf-icon\" src=\"https://image.flaticon.com/icons/svg/179/179483.svg\" alt=\"PDF-ICON\"></img>\n//                     <div className=\"pdf-name\">{props.message.message}</div>\n//                 </div>\n//                 <Tick />\n//                 <span className=\"time\">{time}</span>\n//             </div>\n//         )\n\n//     }\n\n//     // Fail Safe \n//     return (\n//         <div className=\"message clearfix\">\n//             <div className={props.message.source}>\n//                 <div>{props.message.message}</div>\n//                 <Tick />\n//                 <span className=\"time\">{time}</span>\n//             </div>\n\n//         </div>\n//     )\n\n// }\n\n// The bottom component, which includes Smiley Icon, \"Type a message\" field and Send button\n\n\nfunction MessageCompose(props) {\n    return (\n        <div className=\"message-compose\">\n            <div className=\"input-field\">\n                <div className=\"smiley\">\n                    <i className=\"zmdi zmdi-mood\"></i>\n                </div>\n\n                <div className=\"message-type\">\n                    <span>Type a message</span>\n                </div>\n\n                <div className=\"camera-icon\">\n                    <i className=\"zmdi zmdi-camera\"></i>\n                </div>\n            </div>\n\n            <div className=\"send-button\" onClick={props.onSend}>\n                <i className=\"zmdi zmdi-mail-send\"></i>\n            </div>\n\n        </div>\n    );\n}\n\n\n\nclass ChatContainer extends Component {\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    componentDidMount() {\n        this.scrollToBottom();\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"chat-container\">\n                <div className=\"text-container\">\n                    {\n                        this.props.messages.map((m, i) => {\n                            return <Message key={i} message={m} />\n\n                        })\n                    }\n                    <div style={{ float: \"left\", clear: \"both\" }}\n                        ref={(el) => { this.messagesEnd = el; }}></div>\n                </div>\n\n\n                <MessageCompose />\n\n\n            </div>\n        );\n\n    }\n\n}\n\nexport default ChatContainer;"]},"metadata":{},"sourceType":"module"}